(add-load-path "./lib" :relative)
(use rheingau)

;; Command line interface
(define (main args)
  (let ((command (cadr args)))
    (case (string->symbol command)
      ((install i)
       (if (null? (cddr args))
           (load-barrel)
           (let ((pkg (caddr args)))
             (rheingau-install pkg))))))
  0)

(define (load-barrel)
  (require "barrel")
  (let* ((bar (with-input-from-file "barrel.scm" read))
         (pkg (eval bar (find-module 'barrel)))
         (deps (cdr (assq 'dependencies pkg))))
    (when deps
          (for-each (lambda (dep)
                      (print #`"Installing ,(car dep)")
                      ((cdr dep))
                      ) deps))
    )
)
